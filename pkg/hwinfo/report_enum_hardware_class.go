// Code generated by "enumer -type=HardwareClass -json -transform=snake -trimprefix HardwareClass -output=./report_enum_hardware_class.go"; DO NOT EDIT.

package hwinfo

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _HardwareClassName = "nonesyscpukeyboardbraillemousejoystickprinterscannerchipcardmonitortvdisplayframebuffercamerasoundstorage_ctrlnetwork_ctrlisdnmodemnetworkdiskpartitioncdromfloppymanualusb_ctrlusbbiospciisapnpbridgehubscsiidememorydvbpcmciapcmcia_ctrlieee1394ieee1394_ctrlhotplughotplug_ctrlzippppoewlanredasddslblocktapevbebluetoothfingerprintmmc_ctrlnvmeunknownall"

var _HardwareClassIndex = [...]uint16{0, 4, 7, 10, 18, 25, 30, 38, 45, 52, 60, 67, 69, 76, 87, 93, 98, 110, 122, 126, 131, 138, 142, 151, 156, 162, 168, 176, 179, 183, 186, 192, 198, 201, 205, 208, 214, 217, 223, 234, 242, 255, 262, 274, 277, 282, 286, 292, 295, 300, 304, 307, 316, 327, 335, 339, 346, 349}

const _HardwareClassLowerName = "nonesyscpukeyboardbraillemousejoystickprinterscannerchipcardmonitortvdisplayframebuffercamerasoundstorage_ctrlnetwork_ctrlisdnmodemnetworkdiskpartitioncdromfloppymanualusb_ctrlusbbiospciisapnpbridgehubscsiidememorydvbpcmciapcmcia_ctrlieee1394ieee1394_ctrlhotplughotplug_ctrlzippppoewlanredasddslblocktapevbebluetoothfingerprintmmc_ctrlnvmeunknownall"

func (i HardwareClass) String() string {
	if i >= HardwareClass(len(_HardwareClassIndex)-1) {
		return fmt.Sprintf("HardwareClass(%d)", i)
	}
	return _HardwareClassName[_HardwareClassIndex[i]:_HardwareClassIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _HardwareClassNoOp() {
	var x [1]struct{}
	_ = x[HardwareClassNone-(0)]
	_ = x[HardwareClassSys-(1)]
	_ = x[HardwareClassCpu-(2)]
	_ = x[HardwareClassKeyboard-(3)]
	_ = x[HardwareClassBraille-(4)]
	_ = x[HardwareClassMouse-(5)]
	_ = x[HardwareClassJoystick-(6)]
	_ = x[HardwareClassPrinter-(7)]
	_ = x[HardwareClassScanner-(8)]
	_ = x[HardwareClassChipcard-(9)]
	_ = x[HardwareClassMonitor-(10)]
	_ = x[HardwareClassTv-(11)]
	_ = x[HardwareClassDisplay-(12)]
	_ = x[HardwareClassFramebuffer-(13)]
	_ = x[HardwareClassCamera-(14)]
	_ = x[HardwareClassSound-(15)]
	_ = x[HardwareClassStorageCtrl-(16)]
	_ = x[HardwareClassNetworkCtrl-(17)]
	_ = x[HardwareClassIsdn-(18)]
	_ = x[HardwareClassModem-(19)]
	_ = x[HardwareClassNetwork-(20)]
	_ = x[HardwareClassDisk-(21)]
	_ = x[HardwareClassPartition-(22)]
	_ = x[HardwareClassCdrom-(23)]
	_ = x[HardwareClassFloppy-(24)]
	_ = x[HardwareClassManual-(25)]
	_ = x[HardwareClassUsbCtrl-(26)]
	_ = x[HardwareClassUsb-(27)]
	_ = x[HardwareClassBios-(28)]
	_ = x[HardwareClassPci-(29)]
	_ = x[HardwareClassIsapnp-(30)]
	_ = x[HardwareClassBridge-(31)]
	_ = x[HardwareClassHub-(32)]
	_ = x[HardwareClassScsi-(33)]
	_ = x[HardwareClassIde-(34)]
	_ = x[HardwareClassMemory-(35)]
	_ = x[HardwareClassDvb-(36)]
	_ = x[HardwareClassPcmcia-(37)]
	_ = x[HardwareClassPcmciaCtrl-(38)]
	_ = x[HardwareClassIeee1394-(39)]
	_ = x[HardwareClassIeee1394Ctrl-(40)]
	_ = x[HardwareClassHotplug-(41)]
	_ = x[HardwareClassHotplugCtrl-(42)]
	_ = x[HardwareClassZip-(43)]
	_ = x[HardwareClassPppoe-(44)]
	_ = x[HardwareClassWlan-(45)]
	_ = x[HardwareClassRedasd-(46)]
	_ = x[HardwareClassDsl-(47)]
	_ = x[HardwareClassBlock-(48)]
	_ = x[HardwareClassTape-(49)]
	_ = x[HardwareClassVbe-(50)]
	_ = x[HardwareClassBluetooth-(51)]
	_ = x[HardwareClassFingerprint-(52)]
	_ = x[HardwareClassMmcCtrl-(53)]
	_ = x[HardwareClassNvme-(54)]
	_ = x[HardwareClassUnknown-(55)]
	_ = x[HardwareClassAll-(56)]
}

var _HardwareClassValues = []HardwareClass{HardwareClassNone, HardwareClassSys, HardwareClassCpu, HardwareClassKeyboard, HardwareClassBraille, HardwareClassMouse, HardwareClassJoystick, HardwareClassPrinter, HardwareClassScanner, HardwareClassChipcard, HardwareClassMonitor, HardwareClassTv, HardwareClassDisplay, HardwareClassFramebuffer, HardwareClassCamera, HardwareClassSound, HardwareClassStorageCtrl, HardwareClassNetworkCtrl, HardwareClassIsdn, HardwareClassModem, HardwareClassNetwork, HardwareClassDisk, HardwareClassPartition, HardwareClassCdrom, HardwareClassFloppy, HardwareClassManual, HardwareClassUsbCtrl, HardwareClassUsb, HardwareClassBios, HardwareClassPci, HardwareClassIsapnp, HardwareClassBridge, HardwareClassHub, HardwareClassScsi, HardwareClassIde, HardwareClassMemory, HardwareClassDvb, HardwareClassPcmcia, HardwareClassPcmciaCtrl, HardwareClassIeee1394, HardwareClassIeee1394Ctrl, HardwareClassHotplug, HardwareClassHotplugCtrl, HardwareClassZip, HardwareClassPppoe, HardwareClassWlan, HardwareClassRedasd, HardwareClassDsl, HardwareClassBlock, HardwareClassTape, HardwareClassVbe, HardwareClassBluetooth, HardwareClassFingerprint, HardwareClassMmcCtrl, HardwareClassNvme, HardwareClassUnknown, HardwareClassAll}

var _HardwareClassNameToValueMap = map[string]HardwareClass{
	_HardwareClassName[0:4]:          HardwareClassNone,
	_HardwareClassLowerName[0:4]:     HardwareClassNone,
	_HardwareClassName[4:7]:          HardwareClassSys,
	_HardwareClassLowerName[4:7]:     HardwareClassSys,
	_HardwareClassName[7:10]:         HardwareClassCpu,
	_HardwareClassLowerName[7:10]:    HardwareClassCpu,
	_HardwareClassName[10:18]:        HardwareClassKeyboard,
	_HardwareClassLowerName[10:18]:   HardwareClassKeyboard,
	_HardwareClassName[18:25]:        HardwareClassBraille,
	_HardwareClassLowerName[18:25]:   HardwareClassBraille,
	_HardwareClassName[25:30]:        HardwareClassMouse,
	_HardwareClassLowerName[25:30]:   HardwareClassMouse,
	_HardwareClassName[30:38]:        HardwareClassJoystick,
	_HardwareClassLowerName[30:38]:   HardwareClassJoystick,
	_HardwareClassName[38:45]:        HardwareClassPrinter,
	_HardwareClassLowerName[38:45]:   HardwareClassPrinter,
	_HardwareClassName[45:52]:        HardwareClassScanner,
	_HardwareClassLowerName[45:52]:   HardwareClassScanner,
	_HardwareClassName[52:60]:        HardwareClassChipcard,
	_HardwareClassLowerName[52:60]:   HardwareClassChipcard,
	_HardwareClassName[60:67]:        HardwareClassMonitor,
	_HardwareClassLowerName[60:67]:   HardwareClassMonitor,
	_HardwareClassName[67:69]:        HardwareClassTv,
	_HardwareClassLowerName[67:69]:   HardwareClassTv,
	_HardwareClassName[69:76]:        HardwareClassDisplay,
	_HardwareClassLowerName[69:76]:   HardwareClassDisplay,
	_HardwareClassName[76:87]:        HardwareClassFramebuffer,
	_HardwareClassLowerName[76:87]:   HardwareClassFramebuffer,
	_HardwareClassName[87:93]:        HardwareClassCamera,
	_HardwareClassLowerName[87:93]:   HardwareClassCamera,
	_HardwareClassName[93:98]:        HardwareClassSound,
	_HardwareClassLowerName[93:98]:   HardwareClassSound,
	_HardwareClassName[98:110]:       HardwareClassStorageCtrl,
	_HardwareClassLowerName[98:110]:  HardwareClassStorageCtrl,
	_HardwareClassName[110:122]:      HardwareClassNetworkCtrl,
	_HardwareClassLowerName[110:122]: HardwareClassNetworkCtrl,
	_HardwareClassName[122:126]:      HardwareClassIsdn,
	_HardwareClassLowerName[122:126]: HardwareClassIsdn,
	_HardwareClassName[126:131]:      HardwareClassModem,
	_HardwareClassLowerName[126:131]: HardwareClassModem,
	_HardwareClassName[131:138]:      HardwareClassNetwork,
	_HardwareClassLowerName[131:138]: HardwareClassNetwork,
	_HardwareClassName[138:142]:      HardwareClassDisk,
	_HardwareClassLowerName[138:142]: HardwareClassDisk,
	_HardwareClassName[142:151]:      HardwareClassPartition,
	_HardwareClassLowerName[142:151]: HardwareClassPartition,
	_HardwareClassName[151:156]:      HardwareClassCdrom,
	_HardwareClassLowerName[151:156]: HardwareClassCdrom,
	_HardwareClassName[156:162]:      HardwareClassFloppy,
	_HardwareClassLowerName[156:162]: HardwareClassFloppy,
	_HardwareClassName[162:168]:      HardwareClassManual,
	_HardwareClassLowerName[162:168]: HardwareClassManual,
	_HardwareClassName[168:176]:      HardwareClassUsbCtrl,
	_HardwareClassLowerName[168:176]: HardwareClassUsbCtrl,
	_HardwareClassName[176:179]:      HardwareClassUsb,
	_HardwareClassLowerName[176:179]: HardwareClassUsb,
	_HardwareClassName[179:183]:      HardwareClassBios,
	_HardwareClassLowerName[179:183]: HardwareClassBios,
	_HardwareClassName[183:186]:      HardwareClassPci,
	_HardwareClassLowerName[183:186]: HardwareClassPci,
	_HardwareClassName[186:192]:      HardwareClassIsapnp,
	_HardwareClassLowerName[186:192]: HardwareClassIsapnp,
	_HardwareClassName[192:198]:      HardwareClassBridge,
	_HardwareClassLowerName[192:198]: HardwareClassBridge,
	_HardwareClassName[198:201]:      HardwareClassHub,
	_HardwareClassLowerName[198:201]: HardwareClassHub,
	_HardwareClassName[201:205]:      HardwareClassScsi,
	_HardwareClassLowerName[201:205]: HardwareClassScsi,
	_HardwareClassName[205:208]:      HardwareClassIde,
	_HardwareClassLowerName[205:208]: HardwareClassIde,
	_HardwareClassName[208:214]:      HardwareClassMemory,
	_HardwareClassLowerName[208:214]: HardwareClassMemory,
	_HardwareClassName[214:217]:      HardwareClassDvb,
	_HardwareClassLowerName[214:217]: HardwareClassDvb,
	_HardwareClassName[217:223]:      HardwareClassPcmcia,
	_HardwareClassLowerName[217:223]: HardwareClassPcmcia,
	_HardwareClassName[223:234]:      HardwareClassPcmciaCtrl,
	_HardwareClassLowerName[223:234]: HardwareClassPcmciaCtrl,
	_HardwareClassName[234:242]:      HardwareClassIeee1394,
	_HardwareClassLowerName[234:242]: HardwareClassIeee1394,
	_HardwareClassName[242:255]:      HardwareClassIeee1394Ctrl,
	_HardwareClassLowerName[242:255]: HardwareClassIeee1394Ctrl,
	_HardwareClassName[255:262]:      HardwareClassHotplug,
	_HardwareClassLowerName[255:262]: HardwareClassHotplug,
	_HardwareClassName[262:274]:      HardwareClassHotplugCtrl,
	_HardwareClassLowerName[262:274]: HardwareClassHotplugCtrl,
	_HardwareClassName[274:277]:      HardwareClassZip,
	_HardwareClassLowerName[274:277]: HardwareClassZip,
	_HardwareClassName[277:282]:      HardwareClassPppoe,
	_HardwareClassLowerName[277:282]: HardwareClassPppoe,
	_HardwareClassName[282:286]:      HardwareClassWlan,
	_HardwareClassLowerName[282:286]: HardwareClassWlan,
	_HardwareClassName[286:292]:      HardwareClassRedasd,
	_HardwareClassLowerName[286:292]: HardwareClassRedasd,
	_HardwareClassName[292:295]:      HardwareClassDsl,
	_HardwareClassLowerName[292:295]: HardwareClassDsl,
	_HardwareClassName[295:300]:      HardwareClassBlock,
	_HardwareClassLowerName[295:300]: HardwareClassBlock,
	_HardwareClassName[300:304]:      HardwareClassTape,
	_HardwareClassLowerName[300:304]: HardwareClassTape,
	_HardwareClassName[304:307]:      HardwareClassVbe,
	_HardwareClassLowerName[304:307]: HardwareClassVbe,
	_HardwareClassName[307:316]:      HardwareClassBluetooth,
	_HardwareClassLowerName[307:316]: HardwareClassBluetooth,
	_HardwareClassName[316:327]:      HardwareClassFingerprint,
	_HardwareClassLowerName[316:327]: HardwareClassFingerprint,
	_HardwareClassName[327:335]:      HardwareClassMmcCtrl,
	_HardwareClassLowerName[327:335]: HardwareClassMmcCtrl,
	_HardwareClassName[335:339]:      HardwareClassNvme,
	_HardwareClassLowerName[335:339]: HardwareClassNvme,
	_HardwareClassName[339:346]:      HardwareClassUnknown,
	_HardwareClassLowerName[339:346]: HardwareClassUnknown,
	_HardwareClassName[346:349]:      HardwareClassAll,
	_HardwareClassLowerName[346:349]: HardwareClassAll,
}

var _HardwareClassNames = []string{
	_HardwareClassName[0:4],
	_HardwareClassName[4:7],
	_HardwareClassName[7:10],
	_HardwareClassName[10:18],
	_HardwareClassName[18:25],
	_HardwareClassName[25:30],
	_HardwareClassName[30:38],
	_HardwareClassName[38:45],
	_HardwareClassName[45:52],
	_HardwareClassName[52:60],
	_HardwareClassName[60:67],
	_HardwareClassName[67:69],
	_HardwareClassName[69:76],
	_HardwareClassName[76:87],
	_HardwareClassName[87:93],
	_HardwareClassName[93:98],
	_HardwareClassName[98:110],
	_HardwareClassName[110:122],
	_HardwareClassName[122:126],
	_HardwareClassName[126:131],
	_HardwareClassName[131:138],
	_HardwareClassName[138:142],
	_HardwareClassName[142:151],
	_HardwareClassName[151:156],
	_HardwareClassName[156:162],
	_HardwareClassName[162:168],
	_HardwareClassName[168:176],
	_HardwareClassName[176:179],
	_HardwareClassName[179:183],
	_HardwareClassName[183:186],
	_HardwareClassName[186:192],
	_HardwareClassName[192:198],
	_HardwareClassName[198:201],
	_HardwareClassName[201:205],
	_HardwareClassName[205:208],
	_HardwareClassName[208:214],
	_HardwareClassName[214:217],
	_HardwareClassName[217:223],
	_HardwareClassName[223:234],
	_HardwareClassName[234:242],
	_HardwareClassName[242:255],
	_HardwareClassName[255:262],
	_HardwareClassName[262:274],
	_HardwareClassName[274:277],
	_HardwareClassName[277:282],
	_HardwareClassName[282:286],
	_HardwareClassName[286:292],
	_HardwareClassName[292:295],
	_HardwareClassName[295:300],
	_HardwareClassName[300:304],
	_HardwareClassName[304:307],
	_HardwareClassName[307:316],
	_HardwareClassName[316:327],
	_HardwareClassName[327:335],
	_HardwareClassName[335:339],
	_HardwareClassName[339:346],
	_HardwareClassName[346:349],
}

// HardwareClassString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func HardwareClassString(s string) (HardwareClass, error) {
	if val, ok := _HardwareClassNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _HardwareClassNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to HardwareClass values", s)
}

// HardwareClassValues returns all values of the enum
func HardwareClassValues() []HardwareClass {
	return _HardwareClassValues
}

// HardwareClassStrings returns a slice of all String values of the enum
func HardwareClassStrings() []string {
	strs := make([]string, len(_HardwareClassNames))
	copy(strs, _HardwareClassNames)
	return strs
}

// IsAHardwareClass returns "true" if the value is listed in the enum definition. "false" otherwise
func (i HardwareClass) IsAHardwareClass() bool {
	for _, v := range _HardwareClassValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for HardwareClass
func (i HardwareClass) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for HardwareClass
func (i *HardwareClass) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("HardwareClass should be a string, got %s", data)
	}

	var err error
	*i, err = HardwareClassString(s)
	return err
}
